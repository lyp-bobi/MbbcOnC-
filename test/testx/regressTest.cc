//
// Created by Chuang on 2020/10/28.
//
#include "testFuncs.h"

int main(){
    struct str{
        char a[100];
    };
    cerr<<sizeof(str)<<endl;
    std::ofstream outfile("D://TRI-framework/out.log");
    string target = "glexpand.datas";
    xTrajectory tj,tj2;

    tj.loadFromString(
            "10417.000000,19094.000000,6.000000 10433.014748,19006.452711,7.000000 10448.320880,18918.798938,8.000000 10458.743941,18830.411383,9.000000 10469.167001,18742.023828,10.000000 10536.506853,18724.258128,11.000000 10625.056541,18733.177890,12.000000 10713.597789,18742.187900,13.000000 10802.172158,18750.881489,14.000000 10882.088884,18765.733328,15.000000 10946.188661,18716.892358,16.000000 11012.754620,18657.817289,17.000000 11079.127834,18598.525423,18.000000 11145.842687,18539.617627,19.000000 11212.557540,18480.709832,20.000000 11275.522475,18471.853720,21.000000 11332.714966,18540.044768,22.000000 11392.113609,18606.274447,23.000000 11461.018240,18661.238805,24.000000 11537.483537,18706.780636,25.000000 11607.272589,18757.913071,26.000000 11686.639470,18798.185870,27.000000 11766.006350,18838.458668,28.000000 11845.373231,18878.731466,29.000000 11924.740111,18919.004264,30.000000 12003.568839,18960.284419,31.000000 12073.989322,19039.555977,32.000000 12134.850440,19158.937401,33.000000 12195.606753,19278.372132,34.000000 12256.873409,19397.545738,35.000000 12318.201343,19516.688025,36.000000 12379.529276,19635.830312,37.000000 12434.344363,19758.046136,38.000000 12493.753550,19864.857810,39.000000 12582.809878,19957.537794,40.000000 12696.125863,20029.060430,41.000000 12809.483426,20100.517029,42.000000 12922.959437,20171.785500,43.000000 13004.567743,20273.098266,44.000000 13069.089457,20387.451134,45.000000 13176.565154,20467.482206,46.000000 13286.893889,20542.457050,47.000000 13411.479021,20591.796046,48.000000 13536.140766,20640.943266,49.000000 13660.802512,20690.090487,50.000000 13785.464257,20739.237707,51.000000 13910.126002,20788.384927,52.000000 14034.548802,20838.122068,53.000000 14158.273479,20889.582775,54.000000 14281.998156,20941.043481,55.000000 14405.816667,20992.277451,56.000000 14529.723532,21043.297925,57.000000 14653.934663,21093.558960,58.000000 14778.433309,21143.113226,59.000000 14902.798396,21192.962687,60.000000 15010.859364,21242.569538,61.000000 14992.580534,21298.666636,62.000000 14977.098548,21355.533698,63.000000 14964.091058,21413.081984,64.000000 14951.083569,21470.630270,65.000000 14942.409179,21528.988040,66.000000 14935.000000,21587.442191,67.000000 14935.000000,21646.442191,68.000000 14935.000000,21705.442191,69.000000 14937.262623,21764.341382,70.000000 14942.509608,21823.107606,71.000000 14949.202482,21881.710444,72.000000 14957.201618,21940.165673,73.000000 14965.979232,21998.508496,74.000000 14974.843159,22056.838855,75.000000 14983.707086,22115.169214,76.000000 14993.160429,22173.402412,77.000000 15003.487396,22231.491600,78.000000 15013.814362,22289.580788,79.000000 15024.141329,22347.669976,80.000000 15034.468296,22405.759164,81.000000 15044.795263,22463.848352,82.000000 15055.122229,22521.937540,83.000000 15065.547113,22580.009123,84.000000 15076.101354,22638.057447,85.000000 15085.271704,22696.325826,86.000000 15093.243383,22754.784806,87.000000 15101.391927,22813.219251,88.000000 15109.633961,22871.640727,89.000000 15117.875995,22930.062203,90.000000 15126.118029,22988.483679,91.000000 15130.000000,23047.211196,92.000000 15130.000000,23106.211196,93.000000 15125.734698,23165.036682,94.000000 15120.914797,23223.839475,95.000000 15101.450081,23279.056057,96.000000 15081.419039,23334.445205,97.000000 15064.222959,23390.883621,98.000000 15049.484268,23447.876372,99.000000 15040.785356,23506.231568,100.000000 15032.086445,23564.586765,101.000000 15030.714147,23623.165898,102.000000 15035.832911,23681.943430,103.000000 15040.951675,23740.720962,104.000000 15046.070439,23799.498494,105.000000 15051.189203,23858.276026,106.000000 15056.307967,23917.053558,107.000000 15061.193366,23975.850873,108.000000 15066.042282,24034.651281,109.000000 15070.891197,24093.451690,110.000000 15075.740113,24152.252098,111.000000 15080.589029,24211.052506,112.000000 15085.437945,24269.852915,113.000000 15090.286861,24328.653323,114.000000 15095.135777,24387.453731,115.000000 15099.984693,24446.254139,116.000000 15104.833609,24505.054548,117.000000 15109.682525,24563.854956,118.000000 15114.531441,24622.655364,119.000000 15119.380357,24681.455773,120.000000 15124.229273,24740.256181,121.000000 15129.078189,24799.056589,122.000000 15133.927105,24857.856997,123.000000 15138.776021,24916.657406,124.000000 15143.624936,24975.457814,125.000000 15148.473852,25034.258222,126.000000 15153.322768,25093.058630,127.000000 15158.171684,25151.859039,128.000000 15163.020600,25210.659447,129.000000 15167.869516,25269.459855,130.000000 15172.718432,25328.260264,131.000000 15177.567348,25387.060672,132.000000 15182.416264,25445.861080,133.000000 15187.265180,25504.661488,134.000000 15192.114096,25563.461897,135.000000 15196.963012,25622.262305,136.000000 15201.811928,25681.062713,137.000000 15206.660844,25739.863122,138.000000 15211.509760,25798.663530,139.000000 15216.358675,25857.463938,140.000000 15221.207591,25916.264346,141.000000 15225.123920,25975.100869,142.000000 15230.098451,26033.890784,143.000000 15235.072982,26092.680698,144.000000 15240.047513,26151.470613,145.000000 15245.020264,26210.260671,146.000000 15249.593040,26269.083199,147.000000 15254.165816,26327.905726,148.000000 15258.738592,26386.728253,149.000000 15263.311368,26445.550781,150.000000 15267.884144,26504.373308,151.000000 15272.456920,26563.195835,152.000000 15277.029696,26622.018363,153.000000 15281.602472,26680.840890,154.000000 15286.175248,26739.663417,155.000000 15290.870124,26798.476119,156.000000 15295.762310,26857.272943,157.000000 15300.654495,26916.069767,158.000000 15305.546681,26974.866591,159.000000 15310.438867,27033.663415,160.000000 15315.331052,27092.460239,161.000000 15320.223238,27151.257063,162.000000 15325.115424,27210.053888,163.000000 15330.007609,27268.850712,164.000000 15334.899795,27327.647536,165.000000 15339.791981,27386.444360,166.000000 15350.361693,27443.930067,167.000000 15365.106665,27500.342833,168.000000 15368.161820,27559.263678,169.000000 15371.257368,27618.182233,170.000000 15374.881282,27677.070834,171.000000 15370.232042,27735.826689,172.000000 15375.059089,27794.628896,173.000000 15379.886135,27853.431104,174.000000 15384.713182,27912.233312,175.000000 15389.540229,27971.035519,176.000000 15394.322793,28029.841344,177.000000 15399.059135,28088.650927,178.000000 15403.795477,28147.460510,179.000000 15408.531820,28206.270093,180.000000 15413.268162,28265.079676,181.000000 15418.004504,28323.889259,182.000000 15422.740846,28382.698842,183.000000 15427.477189,28441.508425,184.000000 15476.416535,28427.732613,185.000000 15530.840554,28404.950466,186.000000 15585.264572,28382.168319,187.000000 15639.467838,28358.868356,188.000000 15693.589145,28335.376140,189.000000 15747.710451,28311.883925,190.000000 15791.949241,28316.194111,191.000000 15819.100940,28368.575264,192.000000 15846.252639,28420.956418,193.000000 15873.404337,28473.337571,194.000000 15902.333786,28511.852824,195.000000 15938.173140,28496.472944,196.000000 15974.012494,28481.093064,197.000000 16009.851848,28465.713183,198.000000 16045.691202,28450.333303,199.000000 16081.530555,28434.953423,200.000000 16117.369909,28419.573543,201.000000 16149.000000,28406.000000,202.000000"
            );
    tjstat->usedata("td");
    tjstat->mint = 0;
    auto tmpsdf = xTrajectory::GSS(tj, 100);
    xStore x(target, testFileName(target), true);
    double seglen[]={100, 200, 400};//800,1200,1600
    xCylinder query(xPoint(40,116.327,6516),0.0001,6516,9516,2);

//    tj.getMinimumDistance(tj2);
//    x.loadTraj(tj, xStoreEntry(4337,0,1000));
//    tj.intersectsxCylinder(query);
//    cerr<<tj.intersectsxCylinder(query);
    tjstat->bt=50;
    xSBB s;
    s.loadFromString("0 1 0 39.984438 116.347402 9194.000000 39.998213 116.365543 10194.000000 0.043406 0.000149");
    query.checkRel(s);

    for(int i=3;i<50;i++) {
        xTrajectory::simplifyWithRDPN(tj.m_points, i);
    }
    MyVisitor vis;
    vector<xTrajectory> queries;
//    current_distance = IED;
    current_distance = RMDTW;
    for(int i=0;i<500;i++)
    {
        queries.emplace_back(x.randomSubtraj(4300));
    }
//    xTrajectory tja, tjb;
//    tja.loadFromString("116.434829,39.929174,122777.941456 116.443740,39.925630,122950.000000 116.454910,39.921880,123251.000000 116.482810,39.921670,123553.000000 116.498980,39.927200,123855.000000 116.487090,39.921710,124157.000000 116.476370,39.907860,124458.000000 116.471930,39.913830,125199.000000 116.456790,39.922090,125507.000000 116.440900,39.961340,125802.000000 116.431030,39.983610,126104.000000 116.428182,39.983764,126377.941456");
//    tjb.loadFromString("116.463880,39.906810,125535.000000 116.471010,39.906730,125595.000000");
//    tja.getMinimumDistance(tjb);

    srand(time(NULL));
//    tj = x.randomSubtraj(3000);
    try {
        for(int i=0;i<10000;i++) {
//            tj = x.randomSubtraj(3000);
//            std::cerr<<tj.toString()<<endl;
//            tj.loadFromString("116.329232,39.879030,5029569.186606 116.329230,39.879030,5029643.000000 116.329243,39.879049,5032569.186606");
//            cerr<<tj.toString()<<endl;
            tj.loadFromString(
                    "10417.000000,19094.000000,6.000000 10433.014748,19006.452711,7.000000 10448.320880,18918.798938,8.000000 10458.743941,18830.411383,9.000000 10469.167001,18742.023828,10.000000 10536.506853,18724.258128,11.000000 10625.056541,18733.177890,12.000000 10713.597789,18742.187900,13.000000 10802.172158,18750.881489,14.000000 10882.088884,18765.733328,15.000000 10946.188661,18716.892358,16.000000 11012.754620,18657.817289,17.000000 11079.127834,18598.525423,18.000000 11145.842687,18539.617627,19.000000 11212.557540,18480.709832,20.000000 11275.522475,18471.853720,21.000000 11332.714966,18540.044768,22.000000 11392.113609,18606.274447,23.000000 11461.018240,18661.238805,24.000000 11537.483537,18706.780636,25.000000 11607.272589,18757.913071,26.000000 11686.639470,18798.185870,27.000000 11766.006350,18838.458668,28.000000 11845.373231,18878.731466,29.000000 11924.740111,18919.004264,30.000000 12003.568839,18960.284419,31.000000 12073.989322,19039.555977,32.000000 12134.850440,19158.937401,33.000000 12195.606753,19278.372132,34.000000 12256.873409,19397.545738,35.000000 12318.201343,19516.688025,36.000000 12379.529276,19635.830312,37.000000 12434.344363,19758.046136,38.000000 12493.753550,19864.857810,39.000000 12582.809878,19957.537794,40.000000 12696.125863,20029.060430,41.000000 12809.483426,20100.517029,42.000000 12922.959437,20171.785500,43.000000 13004.567743,20273.098266,44.000000 13069.089457,20387.451134,45.000000 13176.565154,20467.482206,46.000000 13286.893889,20542.457050,47.000000 13411.479021,20591.796046,48.000000 13536.140766,20640.943266,49.000000 13660.802512,20690.090487,50.000000 13785.464257,20739.237707,51.000000 13910.126002,20788.384927,52.000000 14034.548802,20838.122068,53.000000 14158.273479,20889.582775,54.000000 14281.998156,20941.043481,55.000000 14405.816667,20992.277451,56.000000 14529.723532,21043.297925,57.000000 14653.934663,21093.558960,58.000000 14778.433309,21143.113226,59.000000 14902.798396,21192.962687,60.000000 15010.859364,21242.569538,61.000000 14992.580534,21298.666636,62.000000 14977.098548,21355.533698,63.000000 14964.091058,21413.081984,64.000000 14951.083569,21470.630270,65.000000 14942.409179,21528.988040,66.000000 14935.000000,21587.442191,67.000000 14935.000000,21646.442191,68.000000 14935.000000,21705.442191,69.000000 14937.262623,21764.341382,70.000000 14942.509608,21823.107606,71.000000 14949.202482,21881.710444,72.000000 14957.201618,21940.165673,73.000000 14965.979232,21998.508496,74.000000 14974.843159,22056.838855,75.000000 14983.707086,22115.169214,76.000000 14993.160429,22173.402412,77.000000 15003.487396,22231.491600,78.000000 15013.814362,22289.580788,79.000000 15024.141329,22347.669976,80.000000 15034.468296,22405.759164,81.000000 15044.795263,22463.848352,82.000000 15055.122229,22521.937540,83.000000 15065.547113,22580.009123,84.000000 15076.101354,22638.057447,85.000000 15085.271704,22696.325826,86.000000 15093.243383,22754.784806,87.000000 15101.391927,22813.219251,88.000000 15109.633961,22871.640727,89.000000 15117.875995,22930.062203,90.000000 15126.118029,22988.483679,91.000000 15130.000000,23047.211196,92.000000 15130.000000,23106.211196,93.000000 15125.734698,23165.036682,94.000000 15120.914797,23223.839475,95.000000 15101.450081,23279.056057,96.000000 15081.419039,23334.445205,97.000000 15064.222959,23390.883621,98.000000 15049.484268,23447.876372,99.000000 15040.785356,23506.231568,100.000000 15032.086445,23564.586765,101.000000 15030.714147,23623.165898,102.000000 15035.832911,23681.943430,103.000000 15040.951675,23740.720962,104.000000 15046.070439,23799.498494,105.000000 15051.189203,23858.276026,106.000000 15056.307967,23917.053558,107.000000 15061.193366,23975.850873,108.000000 15066.042282,24034.651281,109.000000 15070.891197,24093.451690,110.000000 15075.740113,24152.252098,111.000000 15080.589029,24211.052506,112.000000 15085.437945,24269.852915,113.000000 15090.286861,24328.653323,114.000000 15095.135777,24387.453731,115.000000 15099.984693,24446.254139,116.000000 15104.833609,24505.054548,117.000000 15109.682525,24563.854956,118.000000 15114.531441,24622.655364,119.000000 15119.380357,24681.455773,120.000000 15124.229273,24740.256181,121.000000 15129.078189,24799.056589,122.000000 15133.927105,24857.856997,123.000000 15138.776021,24916.657406,124.000000 15143.624936,24975.457814,125.000000 15148.473852,25034.258222,126.000000 15153.322768,25093.058630,127.000000 15158.171684,25151.859039,128.000000 15163.020600,25210.659447,129.000000 15167.869516,25269.459855,130.000000 15172.718432,25328.260264,131.000000 15177.567348,25387.060672,132.000000 15182.416264,25445.861080,133.000000 15187.265180,25504.661488,134.000000 15192.114096,25563.461897,135.000000 15196.963012,25622.262305,136.000000 15201.811928,25681.062713,137.000000 15206.660844,25739.863122,138.000000 15211.509760,25798.663530,139.000000 15216.358675,25857.463938,140.000000 15221.207591,25916.264346,141.000000 15225.123920,25975.100869,142.000000 15230.098451,26033.890784,143.000000 15235.072982,26092.680698,144.000000 15240.047513,26151.470613,145.000000 15245.020264,26210.260671,146.000000 15249.593040,26269.083199,147.000000 15254.165816,26327.905726,148.000000 15258.738592,26386.728253,149.000000 15263.311368,26445.550781,150.000000 15267.884144,26504.373308,151.000000 15272.456920,26563.195835,152.000000 15277.029696,26622.018363,153.000000 15281.602472,26680.840890,154.000000 15286.175248,26739.663417,155.000000 15290.870124,26798.476119,156.000000 15295.762310,26857.272943,157.000000 15300.654495,26916.069767,158.000000 15305.546681,26974.866591,159.000000 15310.438867,27033.663415,160.000000 15315.331052,27092.460239,161.000000 15320.223238,27151.257063,162.000000 15325.115424,27210.053888,163.000000 15330.007609,27268.850712,164.000000 15334.899795,27327.647536,165.000000 15339.791981,27386.444360,166.000000 15350.361693,27443.930067,167.000000 15365.106665,27500.342833,168.000000 15368.161820,27559.263678,169.000000 15371.257368,27618.182233,170.000000 15374.881282,27677.070834,171.000000 15370.232042,27735.826689,172.000000 15375.059089,27794.628896,173.000000 15379.886135,27853.431104,174.000000 15384.713182,27912.233312,175.000000 15389.540229,27971.035519,176.000000 15394.322793,28029.841344,177.000000 15399.059135,28088.650927,178.000000 15403.795477,28147.460510,179.000000 15408.531820,28206.270093,180.000000 15413.268162,28265.079676,181.000000 15418.004504,28323.889259,182.000000 15422.740846,28382.698842,183.000000 15427.477189,28441.508425,184.000000 15476.416535,28427.732613,185.000000 15530.840554,28404.950466,186.000000 15585.264572,28382.168319,187.000000 15639.467838,28358.868356,188.000000 15693.589145,28335.376140,189.000000 15747.710451,28311.883925,190.000000 15791.949241,28316.194111,191.000000 15819.100940,28368.575264,192.000000 15846.252639,28420.956418,193.000000 15873.404337,28473.337571,194.000000 15902.333786,28511.852824,195.000000 15938.173140,28496.472944,196.000000 15974.012494,28481.093064,197.000000 16009.851848,28465.713183,198.000000 16045.691202,28450.333303,199.000000 16081.530555,28434.953423,200.000000 16117.369909,28419.573543,201.000000 16149.000000,28406.000000,202.000000"
            );
            double res1 = 0;
            double res2 = 0;
            for (auto sg:seglen) {
                tjstat->bt = sg;
                auto r = buildMBCRTreeWP(&x, xTrajectory::GSS, sg);
//            r->intersectsWithQuery(query, vis);
                r->nearestNeighborQuery(6, tj, vis);

                std::cerr<<"Hoo " << vis.m_resultGet << " " << vis.m_lastResult << endl;
                if(res1==0&&res2==0) {
                    res1 = vis.m_resultGet;
                    res2 = vis.m_lastResult;
                }else{
                    if(vis.m_resultGet!=res1 || vis.m_lastResult!=res2){
                        outfile<<tj<<endl;
                        cerr<<tj<<endl;
                        outfile.close();
                        return 1;
                    }
                }
                vis.clear();
//            auto r2 = buildMBRRTreeWP(&x, xTrajectory::ISS,querylen);
//            r2->intersectsWithQuery(query, vis);
//            r2->nearestNeighborQuery(6, tj, vis);
//            std::cerr << vis.m_resultGet << " " << vis.m_lastResult << endl;
//            vis.clear();
            }
//
        {
            auto r = buildTBTreeWP(&x);
//            r->intersectsWithQuery(query, vis);
            r->m_bUsingSBBD = true;
            r->nearestNeighborQuery(6, tj, vis);
            std::cerr <<"Hoo " << vis.m_resultGet << " " << vis.m_lastResult << endl;
            vis.clear();
        }
            /*
        {
            auto r = buildSTRTreeWP(&x);
//            r->intersectsWithQuery(query, vis);
//            r->findid(3134);
            r->nearestNeighborQuery(6, tj, vis);
            std::cerr << vis.m_resultGet << " " << vis.m_lastResult << endl;
            vis.clear();
            delete r;
        }
             */
//        for (auto querylen:querylens) {
//            tjstat->bt = querylen;
//            auto r = buildMBCRTreeWP(&x, xTrajectory::ISS,querylen);
//            r->intersectsWithQuery(query, vis);
//            r->nearestNeighborQuery(6, tj, vis);
//            std::cerr << vis.m_resultGet << " " << vis.m_lastResult << endl;
//            vis.clear();
//            auto r2 = buildMBRRTreeWP(&x, xTrajectory::ISS,querylen);
//            r2->intersectsWithQuery(query, vis);
//            r2->nearestNeighborQuery(6, tj, vis);
//            std::cerr << vis.m_resultGet << " " << vis.m_lastResult << endl;
//            vis.clear();
//        }
        {
            auto r = buildTBTreeWP(&x);
            r->intersectsWithQuery(query, vis);
            r->nearestNeighborQuery(6, tj, vis);
            std::cerr << vis.m_resultGet << " " << vis.m_lastResult << endl;
            vis.clear();
        }
//        {
//            auto r = buildSTRTreeWP(&x);
//            r->intersectsWithQuery(query, vis);
//            r->nearestNeighborQuery(6, tj, vis);
//            std::cerr << vis.m_resultGet << " " << vis.m_lastResult << endl;
//            vis.clear();
//        }

        }
    }
    catch (Tools::Exception &e) {
        cerr << "******ERROR******" << endl;
        std::string s = e.what();
        cerr << s << endl;
        return -1;
    }
}